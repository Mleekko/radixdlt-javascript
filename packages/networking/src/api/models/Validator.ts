/* tslint:disable */
/* eslint-disable */
/**
 * Wallet/Explorer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ValidatorProperties,
    ValidatorPropertiesFromJSON,
    ValidatorPropertiesFromJSONTyped,
    ValidatorPropertiesToJSON,
    ValidatorStake,
    ValidatorStakeFromJSON,
    ValidatorStakeFromJSONTyped,
    ValidatorStakeToJSON,
    ValidatorUptime,
    ValidatorUptimeFromJSON,
    ValidatorUptimeFromJSONTyped,
    ValidatorUptimeToJSON,
} from './';

/**
 * 
 * @export
 * @interface Validator
 */
export interface Validator {
    /**
     * 
     * @type {ValidatorStake}
     * @memberof Validator
     */
    stake?: ValidatorStake;
    /**
     * 
     * @type {ValidatorProperties}
     * @memberof Validator
     */
    properties?: ValidatorProperties;
    /**
     * 
     * @type {ValidatorUptime}
     * @memberof Validator
     */
    uptime?: ValidatorUptime;
}

export function ValidatorFromJSON(json: any): Validator {
    return ValidatorFromJSONTyped(json, false);
}

export function ValidatorFromJSONTyped(json: any, ignoreDiscriminator: boolean): Validator {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'stake': !exists(json, 'stake') ? undefined : ValidatorStakeFromJSON(json['stake']),
        'properties': !exists(json, 'properties') ? undefined : ValidatorPropertiesFromJSON(json['properties']),
        'uptime': !exists(json, 'uptime') ? undefined : ValidatorUptimeFromJSON(json['uptime']),
    };
}

export function ValidatorToJSON(value?: Validator | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'stake': ValidatorStakeToJSON(value.stake),
        'properties': ValidatorPropertiesToJSON(value.properties),
        'uptime': ValidatorUptimeToJSON(value.uptime),
    };
}

